name: 'Pull Request'

on:
  push:
    branches: [ 'develop' ]
  pull_request:
    branches: [ 'develop' ]
  workflow_dispatch:
jobs:
  run-lint-checks:
    name: 'Run lint checks'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run lint check
        uses: chartboost/ruff-action@v1
        with:
          src: "."

  run-unit-tests:
    name: 'Run unit tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          architecture: 'x64'
          cache: 'pip'

      - name: Check Python version
        run: python --version

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests and generate coverage report
        run: pytest ./test --doctest-modules --junitxml=junit/test-results.xml --cov=./ --cov-report=xml --cov-report=html

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  run-action-tests:
    strategy:
      matrix:
        config: [
          {
            name: 'string array with double quotes',
            array: '["main", "develop"]',
            template: 'repo{{element}}Branch',
            case: 'pascal',
            expected_output: '["repoMainBranch", "repoDevelopBranch"]'
          },
          {
            name: 'string array with single quotes',
            array: "['main', 'develop']",
            template: 'repo{{element}}Branch',
            case: 'pascal',
            expected_output: '["repoMainBranch", "repoDevelopBranch"]'
          },
          {
            name: 'object array with double quotes',
            array: '[{"branch":"main","env":"dev"},{"branch":"develop","env":"prod"}]',
            template: 'repo{{element.branch}}Branch{{element.env}}',
            case: 'pascal',
            expected_output: '["repoMainBranchDev", "repoDevelopBranchProd"]'
          },
          {
            name: 'object array with single quotes',
            array: "[{'branch':'main','env':'dev'},{'branch':'develop','env':'prod'}]",
            template: 'repo{{element.branch}}Branch{{element.env}}',
            case: 'pascal',
            expected_output: '["repoMainBranchDev", "repoDevelopBranchProd"]'
          },
        ]
    runs-on: ubuntu-latest
    name: Test ${{ matrix.config.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Apply array element template
        uses: ./
        id: array-template
        with:
          array: ${{ matrix.config.array }}
          template: ${{ matrix.config.template }}
          case: ${{ matrix.config.case }}

      - name: Test output
        env:
          EXPECTED_VALUE: ${{ matrix.config.expected_output }}
          ACTUAL_VALUE: ${{ steps.array-template.outputs.json-array }}
        shell: bash
        run: |
          source ./scripts/assertions.sh
          assert_equal "$EXPECTED_VALUE" "$ACTUAL_VALUE"          
